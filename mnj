import pygame
import random
import time
import sys

pygame.init()

WIDTH, HEIGHT = 1200, 750
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("MNJ's Restaurant")

# Font
FONT_PATH = "c://users/USER/nanaii/GameMasakUAP/UAP/Assets/Super Peanut.ttf"
try:
    game_font = pygame.font.Font(FONT_PATH, 30)
    small_font = pygame.font.Font(FONT_PATH, 24)
except FileNotFoundError:
    print("Font tidak ditemukan. Menggunakan default.")
    game_font = pygame.font.SysFont("arial", 30)
    small_font = pygame.font.SysFont("arial", 24)

clock = pygame.time.Clock()

# Warna
BG_COLOR = (255, 248, 230)
CUSTOMER_PANEL_COLOR = (255, 255, 255)
HEADER_COLOR = (180, 220, 255)
TEXT_COLOR_DARK = (50, 50, 50)
BUTTON_PRIMARY = (150, 220, 130)
BUTTON_SELECTED = (255, 120, 120)
BUTTON_HOVER = (180, 240, 160)
ACCENT_ORANGE = (255, 170, 50)
BORDER_COLOR = (120, 120, 120)

bahan_tersedia = ["Steak", "Nasi Goreng", "Teh Es"]
daftar_pesanan = [
    ["Steak", "Nasi Goreng"],
    ["Nasi Goreng", "Teh Es"],
    ["Steak", "Teh Es"],
    ["Steak", "Nasi Goreng", "Teh Es"]
]

food_images = {
    "Steak": pygame.image.load("C:\\Users\\USER\\nanaii\\GameMasakUAP\\UAP\\assets\\steak.png"),
    "Nasi Goreng": pygame.image.load("C:\\Users\\USER\\nanaii\\GameMasakUAP\\UAP\\assets\\nasgor.png"),
    "Teh Es": pygame.image.load("C:\\Users\\USER\\nanaii\\GameMasakUAP\\UAP\\assets\\teh_es.png")
}

# Tombol
btn_width, btn_height = 160, 50
padding_x = 30
start_x_buttons = (WIDTH - (len(bahan_tersedia)*btn_width + (len(bahan_tersedia)-1)*padding_x)) // 2
tombol_bahan = {}
for i, bahan in enumerate(bahan_tersedia):
    tombol_bahan[bahan] = pygame.Rect(start_x_buttons + i * (btn_width + padding_x), HEIGHT - 100, btn_width, btn_height)

# Game variables
pelanggan, pesanan_aktif, pilihan_user = [], [], []
skor, level = 0, 1
level_up_score = 30
LEVEL_TIME_DECREASE = 3
GAME_DURATION = 30
start_time = 0
remaining_time = GAME_DURATION
game_state = "loading"

def mulai_level(lv):
    global GAME_DURATION, start_time, remaining_time
    GAME_DURATION = max(10, 30 - (lv - 1) * LEVEL_TIME_DECREASE)
    start_time = time.time()
    remaining_time = GAME_DURATION

def tampilkan_loading():
    for i in range(0, 101, 5):
        screen.fill(BG_COLOR)
        teks = game_font.render(f"Loading... {i}%", True, TEXT_COLOR_DARK)
        screen.blit(teks, (WIDTH//2 - teks.get_width()//2, HEIGHT//2))
        pygame.display.flip()
        pygame.time.delay(10)

def buat_pelanggan():
    global pelanggan, pesanan_aktif
    pelanggan = []
    pesanan_aktif = []
    for i in range(random.randint(1, 2)):
        pelanggan.append(f"Pelanggan #{i+1}")
        pesanan_aktif.append(random.choice(daftar_pesanan))

def gambar_game():
    screen.fill(BG_COLOR)

    header_rect = pygame.Rect(0, 0, WIDTH, 100)
    pygame.draw.rect(screen, HEADER_COLOR, header_rect)
    pygame.draw.rect(screen, BORDER_COLOR, header_rect, 4)

    screen.blit(game_font.render("MNJ's Restaurant!", True, TEXT_COLOR_DARK), (WIDTH//2 - 200, 30))
    screen.blit(small_font.render(f"Skor: {skor}", True, TEXT_COLOR_DARK), (WIDTH - 150, 30))
    screen.blit(small_font.render(f"Waktu: {int(remaining_time)}s", True, TEXT_COLOR_DARK), (30, 30))
    screen.blit(small_font.render(f"Level: {level}", True, TEXT_COLOR_DARK), (WIDTH//2 - 40, 10))

    for i, nama in enumerate(pelanggan):
        x = 100 + i*550
        y = 150
        panel = pygame.Rect(x, y, 400, 140)
        pygame.draw.rect(screen, CUSTOMER_PANEL_COLOR, panel, border_radius=20)
        pygame.draw.rect(screen, BORDER_COLOR, panel, 4, border_radius=20)
        screen.blit(game_font.render(nama, True, TEXT_COLOR_DARK), (x + 10, y + 10))

        for j, pesanan in enumerate(pesanan_aktif[i]):
            img = pygame.transform.scale(food_images[pesanan], (70, 60))
            screen.blit(img, (x + 10 + j * 80, y + 70))

    for bahan, rect in tombol_bahan.items():
        warna = BUTTON_PRIMARY
        if rect.collidepoint(pygame.mouse.get_pos()):
            warna = BUTTON_HOVER
        if bahan in pilihan_user:
            warna = BUTTON_SELECTED

        pygame.draw.rect(screen, warna, rect, border_radius=10)
        pygame.draw.rect(screen, BORDER_COLOR, rect, 3, border_radius=10)

        screen.blit(small_font.render(bahan, True, TEXT_COLOR_DARK), (rect.x + 10, rect.y + 10))

    sajikan_btn = pygame.Rect(WIDTH//2 - 100, HEIGHT - 180, 200, 60)
    pygame.draw.rect(screen, ACCENT_ORANGE, sajikan_btn, border_radius=20)
    pygame.draw.rect(screen, BORDER_COLOR, sajikan_btn, 4, border_radius=20)
    screen.blit(game_font.render("SAJIKAN!", True, TEXT_COLOR_DARK), (sajikan_btn.x + 20, sajikan_btn.y + 10))
    return sajikan_btn

def periksa_pesanan():
    global skor, pilihan_user, level
    cocok = False
    for idx, pesanan in enumerate(pesanan_aktif):
        if sorted(pilihan_user) == sorted(pesanan):
            if time.time() - start_time <= 3:
                skor += 15
            else:
                skor += 10
            cocok = True
            pelanggan.pop(idx)
            pesanan_aktif.pop(idx)
            break
    if not cocok:
        skor -= 5
    pilihan_user = []

    if skor >= level * level_up_score:
        level += 1
        mulai_level(level)

    if not pelanggan:
        buat_pelanggan()

def tampilkan_game_over():
    screen.fill(BG_COLOR)
    screen.blit(game_font.render("GAME OVER", True, ACCENT_ORANGE), (WIDTH//2 - 120, HEIGHT//2 - 100))
    screen.blit(small_font.render(f"Final Score: {skor}", True, TEXT_COLOR_DARK), (WIDTH//2 - 80, HEIGHT//2))
    screen.blit(small_font.render("[R] Restart | [Q] Quit", True, TEXT_COLOR_DARK), (WIDTH//2 - 100, HEIGHT//2 + 60))
    pygame.display.flip()

# MAIN
jalankan = True
tampilkan_loading()
buat_pelanggan()
mulai_level(level)
game_state = "main"

while jalankan:
    if game_state == "main":
        elapsed = time.time() - start_time
        remaining_time = GAME_DURATION - elapsed
        if remaining_time <= 0:
            game_state = "game_over"

    clock.tick(30)
    for e in pygame.event.get():
        if e.type == pygame.QUIT:
            jalankan = False
        if game_state == "main" and e.type == pygame.MOUSEBUTTONDOWN:
            pos = e.pos
            for bahan, rect in tombol_bahan.items():
                if rect.collidepoint(pos):
                    if bahan not in pilihan_user:
                        pilihan_user.append(bahan)
            if gambar_game().collidepoint(pos):
                periksa_pesanan()
        if game_state == "game_over" and e.type == pygame.KEYDOWN:
            if e.key == pygame.K_r:
                skor = 0
                level = 1
                pilihan_user = []
                buat_pelanggan()
                mulai_level(level)
                game_state = "main"
            elif e.key == pygame.K_q:
                jalankan = False

    if game_state == "main":
        gambar_game()
    elif game_state == "game_over":
        tampilkan_game_over()

    pygame.display.flip()

pygame.quit()
sys.exit()
